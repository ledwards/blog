<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lee Edwards]]></title>
  <link href="http://blog.ledwards.com/atom.xml" rel="self"/>
  <link href="http://blog.ledwards.com/"/>
  <updated>2014-11-05T23:21:54-05:00</updated>
  <id>http://blog.ledwards.com/</id>
  <author>
    <name><![CDATA[Lee Edwards]]></name>
    <email><![CDATA[leeredwards@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How Not to Use Pivotal Tracker]]></title>
    <link href="http://blog.ledwards.com/blog/2013/09/24/how-not-to-use-pivotal-tracker/"/>
    <updated>2013-09-24T09:50:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/09/24/how-not-to-use-pivotal-tracker</id>
    <content type="html"><![CDATA[<p>I used to work at <a href="http://www.pivotallabs.com">Pivotal Labs</a>, and it was an incredible gig. I loved it and learned a lot. Pivotal is known mainly for two things: <a href="http://www.fourhourworkweek.com/blog/2011/06/07/whats-your-start-up-bus-count-7-myths-of-entrepreneurship-and-programming/">their highly-effective agile development methodology</a>, and creating <a href="http://www.pivotaltracker.com">Pivotal Tracker</a>, the agile project management tool. <em>(N.B. The AP Style Guide insists that you always refer to the product as “Pivotal Tracker,” or “Tracker,” but never “Pivotal.” Pivotal is a company. Pivotal Labs is a consulting agency within that company.)</em></p>

<p>I’ve <a href="http://www.quora.com/Ruby-on-Rails/Whats-an-efficient-web-app-development-process/answer/Lee-Edwards?__snids__=186146892&amp;__nsrc__=1">written</a> and <a href="https://speakerdeck.com/ledwards/bringing-the-pivotal-process-to-an-early-startup">spoken</a> <a href="http://dev.sidetour.com/post/25368076497/how-project-management-works-at-sidetour">a lot</a> about <a href="http://www.quora.com/What-is-the-difference-between-Pivotal-Labs-and-an-outsourcing-firm">how Pivotal does agile</a>. Unsurprisingly, <a href="http://vimeo.com/52923973">so has Pivotal</a>. Pivotal was founded in 1989, and after years of working this way, they created Pivotal Tracker as a tool for managing this particular kind of agile software development workflow.</p>

<p>As such, Tracker enforces that process with a degree of rigidity. This is a good thing, I think. So many of Pivotal clients, and so many startups in general, have one of several problems that Tracker tries to solve by offering strong suggestions about how to work.</p>

<ol>
<li>No technical/product-focused cofounder, and hence no guidance on product development process</li>
<li>A technical cofounder with no product experience, and hence no guidance on product development process</li>
<li>A technical cofounder or employee who has only ever hacked alone, and hence has little notion of how to create a product development process as the company grows</li>
<li>A bad product development process</li>
</ol>


<p>If you follow <a href="http://www.youtube.com/watch?v=bzCZysm5lG8">the rules of using Tracker</a>, you will always write specs. You will always break those specs into smaller chunks that still deliver value, called “stories.” You will estimate the stories as a team. You will work on them independently, in the order of their priority, and only one at a time. You will deliver them to QA, or “acceptance” before they can make it to production.</p>

<p>So Tracker is usually a breath of fresh air to these companies. A smart person can pick up the basics of how to do agile the Pivotal Way in a day or two, and really internalize and become highly effective within it by a couple weeks. Even if it&rsquo;s not perfect for them, it&rsquo;s a great place to start. Some people have called Tracker&rsquo;s process &ldquo;training wheels&rdquo;. I&rsquo;d say it&rsquo;s a little more like a damn good starter bicycle. But I don&rsquo;t bike, so my analogy might be off.</p>

<p>So what’s the problem then?</p>

<p>The problem is that efficiency and effectiveness is only part of what a startup’s product team needs in order to succeed. The other part is innovation, and that part is much more difficult to describe using a prescriptive process like this one. Tracker gives you no insight into how a story got into Tracker. All of that happens offline and Tracker doesn’t care about it. But as a company, you have to care about it, because you can’t build a company on bad ideas executed quickly.</p>

<p>We’ve tried a number of things to try to fill this space at SideTour. Some have worked, some haven’t. We’ve done several <a href="http://pivotallabs.com/agile-inception_knowing-what-to-build-and-where-to-start/">Pivotal-style brainstorming sessions called “inceptions.”</a> We’ve tried several incarnations of <a href="http://www.forbes.com/sites/stevedenning/2011/06/27/lean-startups-pt-4-using-kanban-to-validate-innovation/">kanban</a>. We&rsquo;ve done some of this in our <a href="http://pivotallabs.com/running-an-ipm/">iteration planning meetings</a> (IPMs, also known to some as sprint planning meetings). We’ve tried various levels of strictness in adherence to <a href="http://theleanstartup.com/">Lean Startup</a>. We’ve spent time ignoring Tracker and focusing on more free-form development process, somewhat like <a href="http://martinjeeblog.wordpress.com/2012/11/20/what-is-programmer-anarchy-and-does-it-have-a-future/">programmer anarchy</a>, which we called an &ldquo;internal hackathon.&rdquo; We did a company-wide brainstorming session during an offsite. And we’ve had a lot of ad hoc conversations and emails to define our product ideas. eEach of these has had various levels of success worthy of their own blog posts.</p>

<p>But the important takeaway for the purpose of this article is that you can’t use Tracker for any of this. Don’t even try. And Pivotal wouldn’t even disagree with me; it’s simply not what the tool is for. It&rsquo;s an agile development tool, not an ideation tool.</p>

<p>For that, you need something more flexible. I used to recommend card walls for this (to replace people&rsquo;s natural tendancy to do something horrible like store important collaborative information in Word or a moleskine), but lately, I’ve been recommending <a href="http://www.trello.com">Trello</a>.</p>

<p>With Trello, you can define your own process. Some people would say this makes it a great replacement for Tracker, and you can certainly do that. See, for example, <a href="https://trello.com/b/m1v3aMZS/pivotal-tracker-implemented-in-pure-trello">this Trello board I made that implements Pivotal Tracker</a> that could serve as a starting point for modifying the Pivotal process into your own agile development process. Another option is to use Trello to track your ideas in various stages before they enter Tracker.</p>

<p>I don’t have a formula for how to manage the process you use to fill the backlog with successful features. If such a process existed, and I knew it, I would be on a beach in Ibiza drinking away my millions one margarita at a time instead of writing this blog post. But here is what SideTour tried during our Hackathon Week, and it both produced great ideas and raised the level of energy and engagement across the entire office by noticeable amounts.</p>

<ol>
<li>Allow the team to add their own ideas to the Ideas column.</li>
<li>Encourage team-wide discussion on the ideas (turn on voting if you wish)</li>
<li>Allow the developers to pick the next thing they want to work on, based on their own opinions of the discussion and voting.1. Enter some form of agile development cycle. The phases used by Tracker are a reasonable default.</li>
<li>Measure success to help improve company intuition.</li>
</ol>


<p>This process is not optimized for efficiency. Time developers spent discussing various product ideas could be more efficiently allocated to coding. But coders are people, not inputs to a code production engine. And the most valuable ones have product sense. They also know your product better than almost anyone else in the company. Keeping them out of the idea generation phase increases the chance that your startup is going to miss that next important idea.</p>

<p>It’s easy to be lulled into a false sense of security by finding success within your Tracker velocity or &ldquo;Done&rdquo; column. But it’s easy to see how too much focus on getting things done, without an equal or greater focus on what things need to get done, could kill your startup. For that, you need to look outside of Tracker, and inside your team.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Use a Computer]]></title>
    <link href="http://blog.ledwards.com/blog/2013/08/04/how-to-use-a-computer/"/>
    <updated>2013-08-04T16:48:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/08/04/how-to-use-a-computer</id>
    <content type="html"><![CDATA[<p>I stayed in a bed &amp; breakfast at Harvard Square this weekend and found the most amazing hotel computer setup I&rsquo;ve ever seen. I just have to share this.</p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-1.jpg" alt="Here is the whole iMac in all of its glory, adorned with detailed instructions for the novice computer user." /></p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-2.jpg" alt="Closing applications is the Mac's turbo button." /></p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-3.jpg" alt="Sad and confusing that the arrows don't line up with the icons. Good to know that I can use Skype for Skype though. I was also confused as to what &quot;viruses&quot; referred to, until I read the much more common terminology,
&quot;virii.&quot;" /></p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-4.jpg" alt="Easily the worst UI paradigm of OS X, explained succinctly." /></p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-5.jpg" alt="No idea why this one was put on the back. Maybe they got sick of people using the shared computer for porn." /></p>

<hr />

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/how-to-use-a-computer-6.jpg" alt="Oh, in the USB port? Right." /></p>

<hr />

<p>I have to believe this was all constructed after the 100th parent dropping their kid off at Harvard for Freshman Week asked the manager how to use a Mac. It&rsquo;s so ridiculous, but part of me kind of loves it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lee's Famous Red Sangria Recipe]]></title>
    <link href="http://blog.ledwards.com/blog/2013/07/30/lees-famous-red-sangria-recipe/"/>
    <updated>2013-07-30T23:09:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/07/30/lees-famous-red-sangria-recipe</id>
    <content type="html"><![CDATA[<p><em>I went through my old blog, and sadly, the only post I think is worth saving, is my famous sangria recipe. Whatever that says about me, I am willing to accept.</em></p>

<p><strong>WARNING</strong>: This sangria is incredibly alcoholic and will knock you on your ass after two or three glasses. Makes about 3.5L of sangria plus a bunch of alcoholic fruit that contain more alcohol than you think. You&rsquo;ll need at least a 5L jug for this. Serves around 20 people 2-3 glasses each.</p>

<h3>Ingredients</h3>

<ul>
<li>1.75L dry red wine (Yellowtail Merlot is fine)</li>
<li>1 cup Gosling&rsquo;s spiced rum</li>
<li>1 cup Mr. Boston Blackberry-flavored brandy</li>
<li>&frac12; cup Peachtree Schnapps</li>
<li>&frac12; cup Cointreau (or Triple Sec if you&rsquo;re cheap or want to reduce the alcohol content)</li>
<li>1 cup orange juice (the only time in life that no pulp is acceptable)</li>
<li>4 Tsp sugar</li>
<li>4 cans ginger ale</li>
<li>2 lemons</li>
<li>2 limes</li>
<li>2 apples</li>
<li>4 oranges</li>
<li>1 cup strawberries</li>
<li>1 cup raspberries</li>
<li>1 can diced pineapples in juice</li>
</ul>


<h3>Directions</h3>

<ol>
<li>Pour all the alcohol, mixers, and fruit juice in a big freaking pitcher</li>
<li>Pour in the sugar and stir it for awhile</li>
<li>Cut all the fruit into half-slices and throw all the fruit slices (and any juice) in the pitcher</li>
<li>Holy crap, don&rsquo;t drink it yet. Let it sit for 48 hours, 24 hours minimum. Seriously. Stop that. Don&rsquo;t drink it.</li>
<li>When it&rsquo;s time to serve, add the cans of ginger ale.</li>
<li>Slice the remaining oranges and slot them. Serve with a lot of ice in red wine glasses with the slotted orange slices as garnish.</li>
</ol>


<h3>Why I love this recipe:</h3>

<p>Goslings and ginger ale make it a bit spicy, which takes most people by surprise. There is a ridiculous amount of alcohol in here, even moreso if you eat the fruit. Like seriously, watch out. If you don&rsquo;t believe me about the 48 hour wait, try sampling the sangria as soon as you pour it and every 12 hours. The nasty acidic taste in the cheap wine decreases over time and will completely disappear within 48 hours.</p>

<p>Some people have claimed that this is not true sangria, but is in fact a cocktail, owing to the unusally large amount of liquor in the recipe. To that, I say have two or three glasses, and let&rsquo;s settle this with a fist fight.</p>

<p>Enjoy!</p>

<p><em>originally posted on 2011-08-16</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup Golf]]></title>
    <link href="http://blog.ledwards.com/blog/2013/07/28/meetup-golf/"/>
    <updated>2013-07-28T20:34:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/07/28/meetup-golf</id>
    <content type="html"><![CDATA[<p>If you’re a programmer early in your career, you’ve probably heard a lot of people talk about the importance of having a strong network. It’s true. For things like finding a job, a co-founder, or just someone to get advice from, having a strong professional network is invaluable. But the hard part is actually building one, or even knowing how to begin.</p>

<p>The easiest way seems to be to go to networking events. There’s a big problem with this approach though, and that is that <strong>87% of networking event attendees are doing it completely wrong</strong>. Ok, so I made that number up, but hear me out anyway.</p>

<p>If you go to any kind of tech meetup, you will see all sorts of people trying to “build their networks.” They seem to be doing this by walking around, engaging in varying degrees of shameless self-promotion, and trading business cards with as many people as possible. As far as I can tell, the meetup-goer who employs this strategy is expecting that one day, they will have a specific need to use their network for something. They will go directly to their stack of business cards, each one a legally binding contract to call in one favor, and solve their problem with a single email or phone call.</p>

<p>The problem is, of course, that if you have to go to a stack of business cards (or to LinkedIn) to figure out who’s in your network, you’ve already failed. This kind of networking is completely wrong twice. It’s wrong because it’s not going to work, and it’s wrong because it’s a soulless form of quid pro quo that is unbefitting of human beings.</p>

<p>The most helpful people in your network are going to help you not because they expect something in return, but because – get this – they actually like you. So stop trying to make “connections” and “business contacts,” and start trying to make friends. You know, like people do. In life.</p>

<p>Here’s how I suggest approaching meetups and professional networking events. Go with a friend or two. Introduce them to each other and anyone you know at the event. Have them introduce you to some people they know that you don’t. Afterward, grab drinks, or dinner with the friends you’ve brought, and their friends. Have a fun evening.</p>

<p>You can even make a game out of this method. Take the number of business cards you’ve collected (business cards with QR codes count double) and subtract the number of new friends you’ve made. Score it like golf. Par is 2.</p>

<p>I scored a 1 at the last <a href="http://www.outintech.org">Out In Tech</a> event. I score under par fairly consistently at <a href="http://www.ctoschool.org">CTO School</a>, owing mainly to the wine bar after the event. I stopped going to the meetups where I was consistently scoring triple-bogeys, and I’ve been much happier for it. Try this out, and I think you will be too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Olin's Gay Shame]]></title>
    <link href="http://blog.ledwards.com/blog/2013/07/11/olins-gay-shame/"/>
    <updated>2013-07-11T22:49:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/07/11/olins-gay-shame</id>
    <content type="html"><![CDATA[<p>How would you feel, years later, about a college that issued a statement in support of Loving v. Virginia and then retracted it due to pressure from its alumns?</p>

<p>Today my alma mater &ldquo;officially&rdquo; <del>retracted</del> apologized for a Facebook post celebrating the repeal of DOMA, which allowed the many LGBT Olin College community members &ndash; faculty, staff, students, and alumns &ndash; who are married or will be married in the state of Massachusetts &ndash; to enjoy equal protection under federal law.</p>

<blockquote><p>As a matter of policy, Olin College does not endorse any political candidate or political cause, or any religious point of view.</p></blockquote>

<p>Where is the controversy? Marriage equality is now the law in your state and in your country. Does Olin College hold no official position on marriage between heterosexual couples?</p>

<p>Shame on you, whoever made that call. Ordering an employee to <del>remove</del> disown that post <em>was</em> a statement. It was a statement that you would rather disown the LGBT Olin community than risk offending the tender sensibilities of a few bigots. You&rsquo;ve helped create a piece of our collective memory around this historic decision, and it&rsquo;s not one that any of us can be proud of.</p>

<p><strong>EDIT 7/12/2013</strong>: It was called to my attention that Olin didn&rsquo;t actually delete the Facebook post, they only issued an apology for it. My mistake.</p>

<p>It&rsquo;s also worth mentioning that the original post had 120 likes and only 2 detractors. The Olin community is still a very open and accepting one.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In Defense of Coders]]></title>
    <link href="http://blog.ledwards.com/blog/2013/07/11/in-defense-of-coders/"/>
    <updated>2013-07-11T00:34:00-04:00</updated>
    <id>http://blog.ledwards.com/blog/2013/07/11/in-defense-of-coders</id>
    <content type="html"><![CDATA[<p>My good friend James Somers wrote <a href="http://www.aeonmagazine.com/living-together/james-somers-web-developer-money/">this article</a> for Aeon Magazine. It&rsquo;s a great article, well-written as I&rsquo;ve come to expect from James, and there&rsquo;s a lot to unpack &ndash; the idea that programming is basically plumbing, that venture-backed startups are essentially time-wasting factories of frivolity, and that our economic system&rsquo;s basis in supply and demand massively undervalues creative workers like writers &ndash; but there is one idea I want to focus on in particular, because I think I have some insight into the argument that James doesn&rsquo;t have.</p>

<blockquote><p>I have a friend who’s a mechanical engineer. He used to build airplane engines for General Electric, and now he’s trying to develop a smarter pill bottle to improve compliance for AIDS and cancer patients. He works out of a start-up ‘incubator’, in an office space shared with dozens of web companies. He doesn’t have a lot of patience for them. ‘I’m fucking sick of it,’ he told me, ‘all they talk about is colours.’</p></blockquote>

<p>I think it&rsquo;s abundantly clear that this is a false contrast &ndash; rhetorically effective perhaps, but misleading. By contrasting the social good of curing terminal illness with the inanity of arguing over colors, James trivializes software engineering and elevates more traditional forms of engineering.</p>

<p>But he just as easily could have contrasted a mechanical engineer who makes Happy Meal toys to a <a href="http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/">software engineer who writes child welfare software</a>. A huge number of plastics manufacturing jobs are dedicated to cheap toys that end their lives in landfills, but that doesn&rsquo;t take away from medicine bottles any more than <a href="http://www.wheremydogsat.com/">Facebook for dogs</a> takes away from <a href="http://www.kiva.org">crowdfunding female entrepreneurs in third world countries</a>.</p>

<p>Colors can be important. They can also be inane. I can tell you from experience that mechanical engineering is not free of mundane details &ndash; draft angles, radii, and of course &ndash; color. Nor is it free of what James earlier in the article calls knowing the &ldquo;instruction manual.&rdquo; In fact, for MEs, this is tenfold. I can still recite for you the names and compositions of commonly used alloys, rules of thumb for designing machined parts &ndash; depths of cut, recommended spindle speeds, and common design features of injection molded parts like bosses and living hinges &ndash; all rote knowledge accidentally commited to permanent memory through a few years of practice. And the ultimate instruction manual for traditional engineers? The $100k four-year instruction manual called a B.S. Engineering.</p>

<blockquote><p>My friends and I who are building websites — we’re kids! We’re kids playing around with tools given to us by adults. In decreasing order of adultness, and leaving out an awful lot, I’m talking about things such as: the Von Neumann stored program computing architecture; the transistor; high-throughput fibre-optic cables; the Unix operating system; the sci-fi-ish cloud computing platform; the web browser; the iPhone; the open source movement; Ruby on Rails; the Stack Overflow Q&amp;A site for programmers; on and on, all the way down to the code that my slightly-more-adult co-workers write for my benefit.</p></blockquote>

<p>When James speaks of abstractions as though they&rsquo;re a bad thing &ndash; something for dull people to be able to wrap their heads around instead of bothering themselves with the intellectual challenges of Djikstra and Turing, he ignores the existance of abstractions in every other creative discipline. Mechanical engineers learn physics in the same way that computer scientists learn linear algebra. One day they may use it a few times, but mostly, they&rsquo;re using reference tables to calculate moments of inertia in that same way that Ruby developers might use Math.rand() instead of writing their own pesudeorandom number generator.</p>

<p style="text-align:center;"><img src="http://blog.ledwards.com/images/blog/303-table.jpg" alt="303 Stainless Steel Machinability Table" /></p>

<p>But that isn&rsquo;t to say this article is all bad. Quite the contrary. I really appreciate raising the issue of how society values its workforce. We all know that it&rsquo;s a great injustice how little teachers are paid, and how much better off society would be if we could attract more and higher quality educators to the profession. But singling out software engineers who make $100k a year, while ignoring bankers who make five times as much, and giving a free pass to makers of other disciplines with similar problems, seems disingenuous. Especially when software engineering is such a force for economic betterment, with its highly results-oriented, meritocratic culture. I know a programmer who was homeless on the streets in New York for years. He taught himself how to program, and now he&rsquo;s self-sufficient. Software engineers are free of the expensive artificial certifications that create massive barriers to entry for people entering law, finance, and yes &ndash; mechanical engineering. This is why I&rsquo;m excited about companies like <a href="http://www.flatironschool.com">Flatiron School</a> and <a href="http://www.thinkful.com">Thinkful</a>.</p>

<p>Given all of that, it seems James is attacking the wrong target. The question may not be why are software engineers valued so highly, but why are the artists and writers he mentions valued so poorly? The answer to that, I think is much more elusive, one that maybe someday James will tackle with his incomparable wit and candor, but perhaps this time without the straw man.</p>
]]></content>
  </entry>
  
</feed>
